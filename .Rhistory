limits = c("G", "F", "C"),
labels = c("guards", "forwards", "centers")) +
labs(subtitle = "Summed height of <span style='color:#1c2b7d'>**guards**</span>, <span style='color:#f7ca07'>**forwards**</span> and <span style='color:#e7051a'>**centers**</span>, by team") +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_text(family = "IBM Plex Sans Medium"),
axis.text.y = element_blank(),
plot.subtitle = element_markdown(size = 16, color = "grey40", margin(0, 0, 30, 0))
) +
ggsave(here::here("figures", "height.png"),
height = 12, width = 8, dpi = 320)
ggplot(data = hdf, aes(x = fct_reorder(toupper(country), sum_height))) +
geom_bar(aes(y = height, fill = position), stat = "identity", width = 0.8) +
geom_text(aes(y = 0.25, label = (toupper(country))), hjust = 0, size = 4, color = "grey90", family = "IBM Plex Sans Medium") +
geom_hline(yintercept = max(hdf$sum_height), linetype = "dotted", size = 2, color = "grey30") +
coord_flip(expand = 0) +
scale_y_continuous() +
scale_fill_manual(values=c("#1c2b7d", "#f7ca07", "#e7051a"),
limits = c("G", "F", "C"),
labels = c("guards", "forwards", "centers")) +
labs(subtitle = "Summed height of <span style='color:#1c2b7d'>**guards**</span>, <span style='color:#f7ca07'>**forwards**</span> and <span style='color:#e7051a'>**centers**</span>, by team") +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_text(family = "IBM Plex Sans Medium"),
axis.text.y = element_blank(),
plot.subtitle = element_markdown(size = 16, color = "grey40", margin = margin(0, 0, 30, 0))
) +
ggsave(here::here("figures", "height.png"),
height = 12, width = 8, dpi = 320)
ggplot(data = hdf, aes(x = fct_reorder(toupper(country), sum_height))) +
geom_bar(aes(y = height, fill = position), stat = "identity", width = 0.8) +
geom_text(aes(y = 0.25, label = (toupper(country))), hjust = 0, size = 4, color = "grey90", family = "IBM Plex Sans Medium") +
geom_hline(yintercept = max(hdf$sum_height), linetype = "dotted", size = 2, color = "grey30") +
coord_flip(expand = 0) +
scale_y_continuous(breaks = seq(5, 25, 5)) +
scale_fill_manual(values=c("#1c2b7d", "#f7ca07", "#e7051a"),
limits = c("G", "F", "C"),
labels = c("guards", "forwards", "centers")) +
labs(subtitle = "Summed height of <span style='color:#1c2b7d'>**guards**</span>, <span style='color:#f7ca07'>**forwards**</span> and <span style='color:#e7051a'>**centers**</span>, by team") +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_text(family = "IBM Plex Sans Medium"),
axis.text.y = element_blank(),
plot.subtitle = element_markdown(size = 16, color = "grey40", margin = margin(0, 0, 30, 0))
) +
ggsave(here::here("figures", "height.png"),
height = 12, width = 8, dpi = 320)
ggplot(data = hdf, aes(x = fct_reorder(toupper(country), sum_height))) +
geom_bar(aes(y = height, fill = position), stat = "identity", width = 0.8) +
geom_text(aes(y = 0.25, label = (toupper(country))), hjust = 0, size = 4, color = "grey90", family = "IBM Plex Sans Medium") +
geom_hline(yintercept = max(hdf$sum_height), linetype = "dotted", size = 2, color = "grey30") +
coord_flip(expand = 0) +
scale_y_continuous(breaks = seq(5, 30, 5)) +
scale_fill_manual(values=c("#1c2b7d", "#f7ca07", "#e7051a"),
limits = c("G", "F", "C"),
labels = c("guards", "forwards", "centers")) +
labs(subtitle = "Summed height of <span style='color:#1c2b7d'>**guards**</span>, <span style='color:#f7ca07'>**forwards**</span> and <span style='color:#e7051a'>**centers**</span>, by team") +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_text(family = "IBM Plex Sans Medium"),
axis.text.y = element_blank(),
plot.subtitle = element_markdown(size = 16, color = "grey40", margin = margin(0, 0, 30, 0))
) +
ggsave(here::here("figures", "height.png"),
height = 12, width = 8, dpi = 320)
ggplot(data = hdf, aes(x = fct_reorder(toupper(country), sum_height))) +
geom_bar(aes(y = height, fill = position), stat = "identity", width = 0.8) +
geom_text(aes(y = 0.25, label = (toupper(country))), hjust = 0, size = 4, color = "grey90", family = "IBM Plex Sans Medium") +
geom_hline(yintercept = max(hdf$sum_height), linetype = "dotted", size = 2, color = "grey30") +
coord_flip(expand = 0) +
scale_y_continuous(limits = c(0, 25), breaks = seq(5, 25, 5)) +
scale_fill_manual(values=c("#1c2b7d", "#f7ca07", "#e7051a"),
limits = c("G", "F", "C"),
labels = c("guards", "forwards", "centers")) +
labs(subtitle = "Summed height of <span style='color:#1c2b7d'>**guards**</span>, <span style='color:#f7ca07'>**forwards**</span> and <span style='color:#e7051a'>**centers**</span>, by team") +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_text(family = "IBM Plex Sans Medium"),
axis.text.y = element_blank(),
plot.subtitle = element_markdown(size = 16, color = "grey40", margin = margin(0, 0, 30, 0))
) +
ggsave(here::here("figures", "height.png"),
height = 12, width = 8, dpi = 320)
ggplot(data = hdf, aes(x = fct_reorder(toupper(country), sum_height))) +
geom_bar(aes(y = height, fill = position), stat = "identity", width = 0.8) +
geom_text(aes(y = 0.25, label = (toupper(country))), hjust = 0, size = 4, color = "grey90", family = "IBM Plex Sans Medium") +
geom_hline(yintercept = max(hdf$sum_height), linetype = "dotted", size = 2, color = "grey30") +
coord_flip(expand = 0) +
scale_y_continuous(limits = c(0, 27), breaks = seq(5, 25, 5)) +
scale_fill_manual(values=c("#1c2b7d", "#f7ca07", "#e7051a"),
limits = c("G", "F", "C"),
labels = c("guards", "forwards", "centers")) +
labs(subtitle = "Summed height of <span style='color:#1c2b7d'>**guards**</span>, <span style='color:#f7ca07'>**forwards**</span> and <span style='color:#e7051a'>**centers**</span>, by team") +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_text(family = "IBM Plex Sans Medium"),
axis.text.y = element_blank(),
plot.subtitle = element_markdown(size = 16, color = "grey40", margin = margin(0, 0, 30, 0))
) +
ggsave(here::here("figures", "height.png"),
height = 12, width = 8, dpi = 320)
ggplot(data = hdf, aes(x = fct_reorder(toupper(country), sum_height))) +
geom_bar(aes(y = height, fill = position), stat = "identity", width = 0.8) +
geom_text(aes(y = 0.25, label = (toupper(country))), hjust = 0, size = 4, color = "grey90", family = "IBM Plex Sans Medium") +
geom_hline(yintercept = max(hdf$sum_height), linetype = "dotted", size = 2, color = "grey30") +
coord_flip(expand = 0) +
scale_y_continuous(limits = c(0, 26), breaks = seq(5, 25, 5)) +
scale_fill_manual(values=c("#1c2b7d", "#f7ca07", "#e7051a"),
limits = c("G", "F", "C"),
labels = c("guards", "forwards", "centers")) +
labs(subtitle = "Summed height of <span style='color:#1c2b7d'>**guards**</span>, <span style='color:#f7ca07'>**forwards**</span> and <span style='color:#e7051a'>**centers**</span>, by team") +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_text(family = "IBM Plex Sans Medium"),
axis.text.y = element_blank(),
plot.subtitle = element_markdown(size = 16, color = "grey40", margin = margin(0, 0, 30, 0))
) +
ggsave(here::here("figures", "height.png"),
height = 12, width = 8, dpi = 320)
source("R/scrape_venues.R")
source("R/scrape-venues.R")
tbls
html_table(tbls[[1]])
html_table(tbls[[2]])
html_table(tbls[[2]], fill = T)
html_table(tbls[[4]], fill = T)
html_table(tbls[[3]], fill = T)
source("R/scrape-venues.R")
venues
venues
colnames(venues)
html_table(tbls[[4]], fill = T)
html_table(tbls[[5]], fill = T)
html_table(tbls[[6]], fill = T)
source("R/scrape-venues.R")
venues
q()
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
rosters %>%
mutate(age = year(today()) - year(date_of_birth))
rosters %>%
mutate(age = year(today()) - year(date_of_birth) %>%
typeof(age)
)
rosters %>%
mutate(age = year(today()) - year(date_of_birth))
source("R/age-dist.R")
source("R/age-dist.R")
age_df
age_df
source("R/age-dist.R")
age_df
age_df$age
source("R/age-dist.R")
source("R/age-dist.R")
age_df$age
min(age_df$age)
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
source("R/age-dist.R")
q()
source('~/Documents/Projects/R/FIBA-BWC19/R/scrape-fixtures.R', echo=TRUE)
tbls
tbls[[1]]
tbls[[2]]
tbls[[1,1]]
tbls[1]
tbls[2]
tbls[1]
results <- html_table(tbls[1])
View(results)
results$Visitor
results$Date
results$Date[1]
results <- html_table(tbls[[1]])
results$Date
View(results)
results <- html_table(tbls[[1]]) %>%
filter(PTS != "September")
results <- html_table(tbls[[1]]) %>%
clean_names()
View(results)
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(PTS != "September")
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(pts != "September")
View(results)
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2)
View(results)
library(lubridate)
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2) %>%
mutate(date = as.Date(date))
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2) %>%
mutate(date = dmy(date))
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2)
View(results)
results %>% parse_date(date)
results %>% parse_date(date, "%a, %b")
results %>% parse_date(date, "%a, %b %d, %Y")
results %>% parse_date(., date, "%a, %b %d, %Y")
typeof(results$date)
results %>% parse_date(date, "%a, %b %d, %Y")
ymd(results$date)
results %>% parse_date(date, order = "%a, %b %d, %Y")
results %>% parse_date(date, order = "a, b d, Y")
results %>% parse_date(date, "a, b d, Y")
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2) %>%
as_tibble()
View(results)
results
results %>% parse_date(as.Date(date), "a, b d, Y")
results %>% parse_date(as.character(date), "a, b d, Y")
parse_date(as.character(results$date), "a, b d, Y")
parse_date(as.Date.character(results$date), "a, b d, Y")
parse_date(as.Date(results$date), "a, b d, Y")
parse_date(results$date, "a, b d, Y")
Sys.getlocale("LC_TIME")
parse_date(results$date, "a b d Y")
parse_date(results$date, "A b d Y")
x <- c("09-01-01", "09-01-02", "09-01-03")
parse_date_time(x, "y m d")
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2) %>%
as_tibble()
parse_date(results$date, "a b d Y")
x <- c("09-01-01", "09-01-02", "Sat, Aug 31, 2019")
parse_date_time(x, "y m d")
parse_date_time(x, "a b d Y")
parse_date(results$date, "a b d Y")
results
parse_date(results$date, "a b d Y")
parse_date(as.character(results$date), "a b d Y")
parse_date(strptime(results$date), "a b d Y")
parse_date(results$date, "a b d Y")
typeof(results$date)
parse_date(results$date, "a b d Y", train = FALSE)
parse_date(results$date, "a b d Y", train = FALSE)
parse_date(results$date, "a b d Y", exact = FALSE)
parse_date_time(results$date, "a b d Y", exact = FALSE)
parse_date_time(results$date, "a b d Y")
results <- html_table(tbls[[1]]) %>%
as_tibble() %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2) %>%
mutate(date = ymd(parse_date_time(date, "a b d Y")))
results <- html_table(tbls[[1]]) %>%
as_tibble() %>%
clean_names() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2) %>%
mutate(date = ymd(parse_date_time(date, "a b d Y")))
results <- html_table(tbls[[1]]) %>%
as_tibble() %>%
clean_names()
results <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(pts != "September") %>%
select(date, home = home_neutral, pts_home = pts, visitor = visitor_neutral, pts_visitor = pts_2) %>%
mutate(date = ymd(parse_date_time(date, "a b d Y")))
View(results)
write.csv(here::here("data", "FIBA-WBC19-results.csv"))
write.csv(results, here::here("data", "FIBA-WBC19-results.csv"))
source('~/Documents/Projects/R/FIBA-BWC19/R/scrape-teamstats.R', echo=TRUE)
tbls
tbls[[1]]
tbls[[2]]
tbls[[1,2]]
tbls[[1,1]]
tbls[1]
View(tbls)
tbls[2]
tbls[[]]
tbls[[1]]
tbls[[1]][[1]]
tbls[[1]][[2]]
tbls[[1]][1]
tbls[1][1]
tbls[1][2]
tbls[2][1]
tbls[[1]]
stats <- html_table(tbls[[1]])
View(stats)
stats <- html_table(tbls[[2]])
url <- "https://www.basketball-reference.com/international/fiba-world-cup/2019-schedule.html"
# read in tables
webpage <- read_html(url)
tbls <- html_nodes(webpage, "table")
tbls
source('~/Documents/Projects/R/FIBA-BWC19/R/scrape-teamstats.R', echo=TRUE)
tbls
url <- "https://www.basketball-reference.com/international/fiba-world-cup/2019.html"
# read in tables
webpage <- read_html(url)
tbls <- html_nodes(webpage, "table")
stats <- html_table(tbls[[1]])
tbls
url <- "https://www.basketball-reference.com/international/fiba-world-cup/2019-schedule.html"
# read in tables
webpage <- read_html(url)
tbls <- html_nodes(webpage, "table")
tbls
tbls[[1]]
source('~/Documents/Projects/R/FIBA-BWC19/R/scrape-teamstats.R', echo=TRUE)
tbls
tbls[[1]]
tbls[[1]][4]
tbls[[1]],[4]
tbls[[1, 4]
]
tbls[[1, 4]]
tbls[1, 4]
tbls[[1]][[4]]
tbls
typeof(tbls)
tbls[[1]]
tbls[[1,1]]
stats <- html_table(tbls[[]])
tbls <- html_nodes(webpage, "table")
tbls <- html_nodes(webpage, "table") %>%
.[2:3]
tbls <- html_nodes(webpage, "table") %>%
.[1:2]
tbls <- html_nodes(webpage, "table") %>%
.[2]
tbls <- html_nodes(webpage, "table") %>%
.[1]
tbls
tbls
tbls %>% .[2]
tbls %>% .[1]
tbls %>% .[1,2]
tbls[1,2]
tbls[2]
tbls[,2]
tbls[,]
tbls[,2]
tbls[2,]
tbls[1,1]
tbls[1]
stats <- html_table(tbls[[1]])
stats
html_table(tbls[[1]])
html_table(tbls[[1]])
html_table(tbls[[1]])[2]
html_table(tbls[[1]])[3]
html_table(tbls[[1]])[4]
tbls <- html_nodes(webpage, "table")
stats <- html_table(tbls[[1]])
stats
html_nodes(webpage)
html_nodes(webpage, "table")
html_nodes(webpage, "tables")
html_nodes(webpage, "table")
tbls <- html_nodes(webpage, ".div_team_stats_totals")
stats <- html_table(tbls[[1]])
html_nodes(webpage, ".div_team_stats_totals")
html_nodes(webpage, "#div_team_stats_totals")
html_nodes(webpage, "div_team_stats_totals")
tbls <- html_nodes(webpage, "div_team_stats_totals")
stats <- html_table(tbls[[1]])
tbls <- html_nodes(webpage, "#div_team_stats_totals")
stats <- html_table(tbls[[1]])
tbls <- html_nodes(webpage, "#overthrow table_container")
stats <- html_table(tbls[[1]])
tbls <- html_nodes(webpage, "#team_stats_totals")
stats <- html_table(tbls[[1]])
tbls <- html_nodes(webpage, "team_stats_totals")
stats <- html_table(tbls[[1]])
tbls <- html_nodes(webpage, "#div_team_stats_totals")
stats <- html_table(tbls[[1]])
webpage
View(webpage)
tbls <- html_nodes(webpage, "table")
tbls
library(here)
library(tidyverse)
library(here)
library(tidyverse)
totalstats <- read_csv(here("data", "data/FIBA-WBC19-totalteamstats.txt"))
library(here)
library(tidyverse)
totalstats <- read_csv(here::here("data", "data/FIBA-WBC19-totalteamstats.txt"))
totalstats <- read_csv(here::here("data", "data/FIBA-WBC19-totalteamstats.csv"))
totalstats <- read_csv(here::here("data", "FIBA-WBC19-totalteamstats.csv"))
View(totalstats)
totalstats <- read_csv(here::here("data", "FIBA-WBC19-totalteamstats.csv"))
totalstats %>% select(-rank, everything())
totalstats <- totalstats %>% select(-rank, everything())
write_csv(totalstats,here::here("data", "FIBA-WBC19-totalteamstats.csv"))
totalstats %>%
ggplot() +
geom_col(aes(x = team, y = "FG%"))
totalstats %>%
ggplot() +
geom_col(aes(x = team, y = FG%))
totalstats %>%
ggplot() +
geom_col(aes(x = team, y = 'FG%'))
totalstats %>% select(-rank)
library(here)
library(tidyverse)
totalstats <- read_csv(here::here("data", "FIBA-WBC19-totalteamstats.csv"))
View(totalstats)
totalstats <- totalstats %>% select(-rank)
write_csv(totalstats, here::here("data", "FIBA-WBC19-totalteamstats.csv"))
totalstats <- read_csv(here::here("data", "FIBA-WBC19-totalteamstats.csv"))
totalstats %>%
ggplot() +
geom_col(aes(x = team, y = 'FG_perc'))
totalstats %>%
ggplot() +
geom_col(aes(x = team, y = FG_perc))
totalstats %>%
arrange(FG_perc) %>%
ggplot() +
geom_col(aes(x = team, y = FG_perc))
totalstats %>%
arrange(FG_perc) %>%
ggplot() +
geom_col(aes(x = team, y = FG_perc)) +
coord_flip()
ggplot(totalstats) +
geom_col(aes(x = team, y = 2P_perc)) +
coord_flip()
totalstats <- read_csv(here::here("data", "FIBA-WBC19-totalteamstats.csv"))
ggplot(totalstats) +
geom_col(aes(x = team, y = twopoints_percentage)) +
coord_flip()
ggplot(totalstats) +
geom_col(aes(x = team, y = fieldgoals_percentage)) +
coord_flip()
ggplot(totalstats) +
geom_col(aes(x = team, y = twopoints_percentage)) +
coord_flip()
ggplot(totalstats) +
geom_col(aes(x = team, y = fieldgoals_percentage)) +
geom_col(aes(x = team, y = twopoints_percentage)) +
geom_col(aes(x = team, y = threepoints_percentage)) +
coord_flip()
ggplot(totalstats) +
geom_point(aes(x = team, y = fieldgoals_percentage)) +
geom_point(aes(x = team, y = twopoints_percentage)) +
geom_point(aes(x = team, y = threepoints_percentage)) +
coord_flip()
ggplot(totalstats) +
geom_point(aes(x = team, y = freethrows_percentage)) +
geom_point(aes(x = team, y = twopoints_percentage)) +
geom_point(aes(x = team, y = threepoints_percentage)) +
coord_flip()
