geom_point() +
geom_vline(xintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
theme_minimal() +
theme(
legend.position = "none"
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
theme_minimal() +
theme(
legend.position = "none"
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_markdown(size = 16, color = "grey40", family = "IBM Plex Sans Medium"),
plot.subtitle = element_markdown(size = 12, color = "grey40", margin = margin(0, 0, 20, 0)),
plot.caption = element_markdown(size = 8, color = "grey60", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
library(ggtext)
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_markdown(size = 16, color = "grey40", family = "IBM Plex Sans Medium"),
plot.subtitle = element_markdown(size = 12, color = "grey40", margin = margin(0, 0, 20, 0)),
plot.caption = element_markdown(size = 8, color = "grey60", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_markdown(size = 16, color = "grey40", family = "IBM Plex Sans Medium"),
plot.subtitle = element_markdown(size = 12, color = "grey40", margin = margin(0, 0, 20, 0)),
plot.caption = element_markdown(size = 8, color = "grey60", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
shot_stats <- totalstats %>%
select(team, freethrows_percentage, twopoints_percentage, threepoints_percentage) %>%
gather("type", "percentage", freethrows_percentage, twopoints_percentage, threepoints_percentage) %>%
mutate(
team_color = case_when(
team == "Serbia" ~ "#e7051a",
team == "France" ~ "#f7ca07",
TRUE ~ "grey60"
)
)
shot_stats$type <- factor(shot_stats$type, c("freethrows_percentage", "twopoints_percentage", "threepoints_percentage"))
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_markdown(size = 16, color = "grey40", family = "IBM Plex Sans Medium"),
plot.subtitle = element_markdown(size = 12, color = "grey40", margin = margin(0, 0, 20, 0)),
plot.caption = element_markdown(size = 8, color = "grey60", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
scale_alpha_identity() +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_markdown(size = 16, color = "grey40", family = "IBM Plex Sans Medium"),
plot.subtitle = element_markdown(size = 12, color = "grey40", margin = margin(0, 0, 20, 0)),
plot.caption = element_markdown(size = 8, color = "grey60", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color, alpha = color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
scale_alpha_identity() +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_markdown(size = 16, color = "grey40", family = "IBM Plex Sans Medium"),
plot.subtitle = element_markdown(size = 12, color = "grey40", margin = margin(0, 0, 20, 0)),
plot.caption = element_markdown(size = 8, color = "grey60", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
ggplot(shot_stats, aes(x = type, y = percentage, group = team, color = team_color, alpha = team_color)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.52) +
scale_y_continuous(limits = c(0, 1)) +
scale_x_discrete(labels = c("FT", "2P", "3P")) +
scale_color_identity() +
scale_alpha_identity() +
theme_minimal(base_family = "IBM Plex Sans", base_size = 12) +
theme(
legend.position = "none",
plot.margin = margin(20, 30, 20, 20),
plot.background = element_rect(fill = "grey90", color = NA),
axis.title = element_blank(),
# axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_markdown(size = 16, color = "grey40", family = "IBM Plex Sans Medium"),
plot.subtitle = element_markdown(size = 12, color = "grey40", margin = margin(0, 0, 20, 0)),
plot.caption = element_markdown(size = 8, color = "grey60", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("figures", "stats.png"),
height = 12, width = 8)
library(rvest)
library(tidyverse)
url <- "https://www.basketball-reference.com/international/fiba-world-cup/2019_totals.html"
# read in tables
webpage <- read_html(url)
tbls <- html_nodes(webpage, "table")
tbls
tbls[[1]]
player_stats <- html_table(tbls[[1]])
View(player_stats)
library(janitor)
library(here)
player_stats <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(player != "Player") %>%
player_stats <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(player != "Player")
d
s
player_stats <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(player != "Player")
colnames(player_stats)
player_stats <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(player != "Player") %>%
set_names(c("player",
"team",
"games",
"minutes_played",
"field_goals",
"field_goal_attempts",
"field_goal_percentage",
"three_point_field_goals",
"three_point_field_goal_attempts",
"three_point_field_goal_percentage",
"two_point_field_goals",
"two_point_field_goal_attempts",
"two_point_field_goal_percentage",
"effective_field_goal_percentage",
"free_throws",
"free_throws_attempts",
"free_throws_percentage",
"offensive_rebounds",
"defensive_rebounds",
"total_rebounds",
"assists",
"steals",
"blocks",
"turnovers",
"personal_fouls",
"points"
))
player_stats <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(player != "Player") %>%
mutate_all(na_if,"") %>%
set_names(c("player",
"team",
"games",
"minutes_played",
"field_goals",
"field_goal_attempts",
"field_goal_percentage",
"three_point_field_goals",
"three_point_field_goal_attempts",
"three_point_field_goal_percentage",
"two_point_field_goals",
"two_point_field_goal_attempts",
"two_point_field_goal_percentage",
"effective_field_goal_percentage",
"free_throws",
"free_throws_attempts",
"free_throws_percentage",
"offensive_rebounds",
"defensive_rebounds",
"total_rebounds",
"assists",
"steals",
"blocks",
"turnovers",
"personal_fouls",
"points"
))
write.csv(here::here("data", "FIBA-WBC19-playerstats"))
write.csv(player_stats, here::here("data", "FIBA-WBC19-playerstats"))
write.csv(player_stats, here::here("data", "FIBA-WBC19-playerstats.csv"))
library(tidyverse)
library(here)
source('~/Documents/Projects/R/FIBA-BWC19/R/starplayers.R', echo=TRUE)
View(player_stats)
source('~/Documents/Projects/R/FIBA-BWC19/R/scrape-playerstats.R', echo=TRUE)
View(player_stats)
player_stats <- read_csv(here::here("data", "FIBA-WBC19-playerstats.csv"))
player_stats <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(player != "Player") %>%
mutate_all(na_if,"")
View(player_stats)
player_stats <- html_table(tbls[[1]]) %>%
clean_names() %>%
as_tibble() %>%
filter(player != "Player") %>%
mutate_all(na_if,"") %>%
set_names(c("player",
"team",
"games",
"minutes_played",
"field_goals",
"field_goal_attempts",
"field_goal_percentage",
"three_point_field_goals",
"three_point_field_goal_attempts",
"three_point_field_goal_percentage",
"two_point_field_goals",
"two_point_field_goal_attempts",
"two_point_field_goal_percentage",
"effective_field_goal_percentage",
"free_throws",
"free_throws_attempts",
"free_throws_percentage",
"offensive_rebounds",
"defensive_rebounds",
"total_rebounds",
"assists",
"steals",
"blocks",
"turnovers",
"personal_fouls",
"points"
))
write.csv(player_stats, here::here("data", "FIBA-WBC19-playerstats.csv"))
write_csv(player_stats, here::here("data", "FIBA-WBC19-playerstats.csv"))
source('~/Documents/Projects/R/FIBA-BWC19/R/starplayers.R', echo=TRUE)
player_stats <- read_csv(here::here("data", "FIBA-WBC19-playerstats.csv"))
player_stats <- read_csv(here::here("data", "FIBA-WBC19-playerstats.csv"))
player_stats <- read_csv(here::here("data", "FIBA-WBC19-playerstats.csv"))
View(player_stats)
points_share <- player_stats %>%
group_by(team) %>%
mutate(team_points = sum(points))
View(points_share)
points_share <- player_stats %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)
ggplot(points_share, aes(x = team, y = player_share)) %>%
geom_bar(stat="identity")
ggplot(points_share, aes(x = team, y = player_share)) +
geom_bar(stat="identity")
ggplot(points_share, aes(x = team, y = player_share, color = player)) +
geom_bar(stat="identity")
ggplot(points_share, aes(x = team, y = player_share, color = player)) +
geom_bar(stat="identity") +
theme(
legend.position = "none"
)
ggplot(points_share, aes(x = team, y = player_share, fill = player)) +
geom_bar(stat="identity") +
theme(
legend.position = "none"
)
ggplot(points_share, aes(x = team, y = player_share, fill = player)) +
geom_bar(stat="identity") +
coord_flip() +
theme(
legend.position = "none"
)
points_share <- player_stats %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points,
player_color = case_when(
player == top_n(1, player_share) ~ "red",
TRUE ~ "grey40"
)
)
player_stats
points_share
points_share <- player_stats %>%
select(player, team, points) %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points,
player_color = case_when(
player == top_n(1, player_share) ~ "red",
TRUE ~ "grey40"
)
)
points_share
player == top_n(1, player_share)
points_share %>% player == top_n(1, player_share)
points_share %>% filter(player == top_n(1, player_share))
points_share %>% group_by(team) %>% player_share = points/team_points %>% top_n(1)
points_share <- player_stats %>%
select(player, team, points) %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
) %>%
muatate(player_color = case_when(
player == top_n(1, player_share) ~ "red",
TRUE ~ "grey40"
)
)
points_share <- player_stats %>%
select(player, team, points) %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
) %>%
mutate(player_color = case_when(
player == top_n(1, player_share) ~ "red",
TRUE ~ "grey40"
)
)
points_share <- player_stats %>%
select(player, team, points)
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)  %>% top_n(1)
points_share <- player_stats %>%
select(player, team, points) %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points,
player_color = case_when(
player == top_n(1) ~ "red",
TRUE ~ "grey40"
)
)
points_share <- player_stats %>%
select(player, team, points) %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points,
player_color = case_when(
player == top_n(1, player_share) ~ "red",
TRUE ~ "grey40"
)
)
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)  %>%
filter(player == top_n(1))
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)  %>%
mutate(player_color = ifelse(top_n(1), "red", "grey30"))
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)  %>%
mutate(player_color = ifelse(player %in% top_n(1), "red", "grey30"))
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)  %>%
mutate(player_color = ifelse(player ==head(point_share, 1), "red", "grey30"))
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)  %>%
mutate(player_color = ifelse(player ==head(player_share, 1), "red", "grey30"))
points_share <- player_stats %>%
select(player, team, points) %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points,
player_color = case_when(
player == head(player_share, 1) ~ "red",
TRUE ~ "grey40"
)
)
View(points_share)
points_share %>%
group_by(team) %>%
mutate(
team_points = sum(points),
player_share = points/team_points
)  %>%
mutate(player_color = ifelse(player ==head(player_share, 1), "red", "grey30"))
